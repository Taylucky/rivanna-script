#!/bin/bash
if [ $# -ne 1 ]; then
    echo "Usage: `basename $0` JobID"
    exit 1
fi
JOBID=$1
TMP=$(mktemp)

scontrol show job $1 >$TMP
if [ $? -ne 0 ]; then
    echo "$JOBID is not an active job"
    rm $TMP
    exit 1
fi

USERNAME=$(sed -n 's/^\s*UserId=\([a-z0-9]*\)(.*$/\1/p' $TMP)

# Need to take into account of such cases:
#              note space v                                 *                                 /-- args --\
#   Command=/.../seperated codes/code/test_county_extraction/get_region_bipartite_graph.sbatch 22033 08_30
#   WorkDir=/.../seperated codes/code/test_county_extraction
#                         ^
# Escape space -> can't use back tick
# Argument in Command -> print WorkDir then first argument starting from * in Command
#
# Have not considered spaces in file name

DIRRAW=$(awk -F= '/WorkDir/ {print $2}' $TMP)
DIR=$(echo $DIRRAW | awk '{gsub(/ /, "\\ "); print}')
COMMAND=$(awk -F= '/Command/ {print $2}' $TMP)

echo $USERNAME
echo "$DIR"

if [ "$COMMAND" = "(null)" ]; then
    JOBNAME=$(awk -F= '/JobName/ {print $3}' $TMP)
    echo "No slurm script for job \"$JOBNAME\""
    exit
fi

nchar=${#DIRRAW}
SCRIPT=$(echo "${COMMAND:$nchar}" | awk '{print $1}')

echo "$DIR$SCRIPT"
echo
sudo su - $USERNAME -c "cat $DIR$SCRIPT" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "Slurm script not found. Possibly deleted or renamed."
fi

rm $TMP
